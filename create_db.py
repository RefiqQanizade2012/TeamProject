import sqlite3
from config import DB_NAME

conn = sqlite3.connect(DB_NAME)
cursor = conn.cursor()

cursor.execute("""
CREATE TABLE IF NOT EXISTS games (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    creator TEXT NOT NULL,
    genre TEXT NOT NULL,
    rating REAL NOT NULL
)
""")

games_data = [
    ("The Witcher 3", "CD Projekt", "RPG", 9.8),
    ("Minecraft", "Mojang", "Sandbox", 9.0),
    ("Among Us", "InnerSloth", "Party", 8.5),
    ("Cyberpunk 2077", "CD Projekt", "RPG", 7.0),
    ("Stardew Valley", "ConcernedApe", "Simulation", 9.2),
    ("League of Legends", "Riot Games", "MOBA", 8.9),
    ("Valorant", "Riot Games", "FPS", 8.3),
    ("Fortnite", "Epic Games", "Battle Royale", 8.1),
    ("Call of Duty: Modern Warfare", "Infinity Ward", "FPS", 8.7),
    ("Animal Crossing: New Horizons", "Nintendo", "Simulation", 9.0),
    ("Hollow Knight", "Team Cherry", "Metroidvania", 9.1),
    ("Celeste", "Matt Makes Games", "Platformer", 9.3),
    ("Dota 2", "Valve", "MOBA", 8.8),
    ("Overwatch", "Blizzard", "FPS", 8.6),
    ("The Legend of Zelda: Breath of the Wild", "Nintendo", "Adventure", 9.9),
    ("Super Mario Odyssey", "Nintendo", "Platformer", 9.5),
    ("Terraria", "Re-Logic", "Sandbox", 8.8),
    ("Fall Guys", "Mediatonic", "Party", 8.0),
    ("Genshin Impact", "miHoYo", "RPG", 8.5),
    ("Resident Evil 2", "Capcom", "Horror", 9.0),
    ("Dark Souls III", "FromSoftware", "RPG", 9.2),
    ("Hades", "Supergiant Games", "Roguelike", 9.4),
    ("Sekiro: Shadows Die Twice", "FromSoftware", "Action", 9.1),
    ("Minecraft Dungeons", "Mojang", "Dungeon Crawler", 7.8),
    ("Rocket League", "Psyonix", "Sports", 8.7),
    ("Among Trees", "FJRD Interactive", "Survival", 8.0),
    ("The Sims 4", "Maxis", "Simulation", 8.4),
    ("PUBG", "PUBG Corporation", "Battle Royale", 8.2),
    ("Monster Hunter: World", "Capcom", "Action RPG", 9.1),
    ("Brawlhalla", "Ubisoft", "Fighting", 8.0),
    ("Ori and the Will of the Wisps", "Moon Studios", "Platformer", 9.3),
    ("Cuphead", "StudioMDHR", "Platformer", 9.0),
    ("Bloodborne", "FromSoftware", "Action RPG", 9.4),
    ("Death Stranding", "Kojima Productions", "Adventure", 8.7),
    ("God of War (2018)", "Santa Monica Studio", "Action", 9.5),
    ("Horizon Zero Dawn", "Guerrilla Games", "Action RPG", 9.2),
    ("Persona 5", "Atlus", "RPG", 9.3),
    ("Super Smash Bros. Ultimate", "Nintendo", "Fighting", 9.2),
    ("Resident Evil Village", "Capcom", "Horror", 9.0),
    ("Final Fantasy VII Remake", "Square Enix", "RPG", 9.1),
    ("Spider-Man (PS4)", "Insomniac Games", "Action", 9.3),
    ("Metro Exodus", "4A Games", "FPS", 8.8),
    ("Far Cry 5", "Ubisoft", "FPS", 8.5),
    ("The Elder Scrolls V: Skyrim", "Bethesda", "RPG", 9.4),
    ("Fallout 4", "Bethesda", "RPG", 9.0),
    ("The Last of Us Part II", "Naughty Dog", "Adventure", 9.8),
    ("Uncharted 4", "Naughty Dog", "Adventure", 9.5),
    ("Ghost of Tsushima", "Sucker Punch", "Action", 9.4),
    ("Dark Souls", "FromSoftware", "RPG", 9.3),
    ("Dark Souls II", "FromSoftware", "RPG", 9.1),
    ("Bloodstained: Ritual of the Night", "ArtPlay", "Metroidvania", 8.7),
    ("Slay the Spire", "MegaCrit", "Roguelike", 9.1),
    ("Dead Cells", "Motion Twin", "Roguelike", 9.2),
    ("Valheim", "Iron Gate Studio", "Survival", 8.9),
    ("Terraria Mobile", "Re-Logic", "Sandbox", 8.6),
    ("7 Days to Die", "The Fun Pimps", "Survival", 8.0),
    ("ARK: Survival Evolved", "Studio Wildcard", "Survival", 8.3),
    ("Rust", "Facepunch Studios", "Survival", 8.1),
    ("Subnautica", "Unknown Worlds", "Survival", 9.0),
    ("The Forest", "Endnight Games", "Survival", 8.7),
    ("Factorio", "Wube Software", "Simulation", 9.3),
    ("Cities: Skylines", "Colossal Order", "Simulation", 9.1),
    ("Kerbal Space Program", "Squad", "Simulation", 9.2),
    ("Garry's Mod", "Facepunch Studios", "Sandbox", 8.5),
    ("Left 4 Dead 2", "Valve", "FPS", 9.0),
    ("Half-Life: Alyx", "Valve", "FPS", 9.5),
    ("Portal 2", "Valve", "Puzzle", 9.4),
    ("The Talos Principle", "Croteam", "Puzzle", 9.0),
    ("Braid", "Number None", "Puzzle", 8.8),
    ("Limbo", "Playdead", "Puzzle", 9.0),
    ("Inside", "Playdead", "Puzzle", 9.2),
    ("Tetris Effect", "Monstars", "Puzzle", 9.3),
    ("Papers, Please", "3909", "Simulation", 9.1),
    ("Return of the Obra Dinn", "3909", "Puzzle", 9.2),
    ("Firewatch", "Campo Santo", "Adventure", 8.9),
    ("Oxenfree", "Night School Studio", "Adventure", 8.8),
    ("Night in the Woods", "Infinite Fall", "Adventure", 8.7),
    ("Journey", "thatgamecompany", "Adventure", 9.5),
    ("Flower", "thatgamecompany", "Adventure", 9.0),
    ("Little Nightmares", "Tarsier Studios", "Horror", 8.9),
    ("Amnesia: The Dark Descent", "Frictional Games", "Horror", 9.1),
    ("Outlast", "Red Barrels", "Horror", 8.8),
    ("Soma", "Frictional Games", "Horror", 9.0),
    ("Alien: Isolation", "Creative Assembly", "Horror", 9.0),
    ("Dead by Daylight", "Behaviour Interactive", "Horror", 8.5),
    ("FIFA 23", "EA Sports", "Sports", 8.4),
    ("NBA 2K23", "2K Games", "Sports", 8.3),
    ("Madden NFL 23", "EA Sports", "Sports", 8.2),
    ("Forza Horizon 5", "Playground Games", "Racing", 9.0),
    ("Gran Turismo 7", "Polyphony Digital", "Racing", 8.9),
    ("Need for Speed Heat", "Ghost Games", "Racing", 8.1),
    ("Mario Kart 8 Deluxe", "Nintendo", "Racing", 9.2),
    ("F1 23", "Codemasters", "Racing", 8.8),
    ("Splatoon 3", "Nintendo", "Shooter", 8.9),
    ("Metroid Dread", "Nintendo", "Action", 9.1),
    ("Bayonetta 3", "PlatinumGames", "Action", 9.0),
    ("Xenoblade Chronicles 3", "Monolith Soft", "RPG", 9.2),
    ("Fire Emblem: Three Houses", "Intelligent Systems", "Strategy", 9.1),
    ("Civilization VI", "Firaxis Games", "Strategy", 9.0),
    ("Age of Empires IV", "Relic Entertainment", "Strategy", 8.9),
    ("Starcraft II", "Blizzard", "Strategy", 9.2),
    ("Command & Conquer Remastered", "Petroglyph", "Strategy", 8.8),
]

cursor.executemany("""
INSERT INTO games (name, creator, genre, rating) VALUES (?, ?, ?, ?)
""", games_data)

conn.commit()
conn.close()

print(f"База данных {DB_NAME} успешно создана с 100 играми!")
